//Hero animation settings
namespace Spirit
{
	//The defaults are for Classic tileset using Original movement animation
	CONFIG HERO_ORIGINALTILE = 10168; //Hero's original tile
	CONFIG HERO_ANIMATION_TYPE = 1; //Hero's movement animation type in the Hero Sprite Editor. 0 - Original, 1 - BS, 2 - Z3, 3 - Z3 (Slow Walk)
	CONFIG HERO_TILE_SIZE = 0; //The size of Hero's sprite. 0 - 16x16 (default), 1 - 32x16, 2 - 32x32. This overrides all other HERO_SIZE constants set. Set to -1 if you want to use individual sizings for each tile
	
	//Offset constants - These correspond to the number of tiles between HERO_ORIGINALTILE and the first tile of that respective animation. Set these constants to match the locations of these compared to HERO_ORIGINALTILE in the tile editor.
	CONFIG HERO_TILE_OFFSET_WALK_UP = 0;
	CONFIG HERO_TILE_OFFSET_WALK_DOWN = -4;
	CONFIG HERO_TILE_OFFSET_WALK_LEFT = -8;
	CONFIG HERO_TILE_OFFSET_WALK_RIGHT = -8;
	CONFIG HERO_TILE_OFFSET_SLASH_UP = 137;
	CONFIG HERO_TILE_OFFSET_SLASH_DOWN = 138;
	CONFIG HERO_TILE_OFFSET_SLASH_LEFT = 139;
	CONFIG HERO_TILE_OFFSET_SLASH_RIGHT = 140;
	CONFIG HERO_TILE_OFFSET_STAB_UP = 3;
	CONFIG HERO_TILE_OFFSET_STAB_DOWN = -1;
	CONFIG HERO_TILE_OFFSET_STAB_LEFT = -5;
	CONFIG HERO_TILE_OFFSET_STAB_RIGHT = -5;
	CONFIG HERO_TILE_OFFSET_POUND_UP = -21;
	CONFIG HERO_TILE_OFFSET_POUND_DOWN = -22;
	CONFIG HERO_TILE_OFFSET_POUND_LEFT = -23;
	CONFIG HERO_TILE_OFFSET_POUND_RIGHT = -23;
	CONFIG HERO_TILE_OFFSET_JUMP_UP = 173;
	CONFIG HERO_TILE_OFFSET_JUMP_DOWN = 178;
	CONFIG HERO_TILE_OFFSET_JUMP_LEFT = 195;
	CONFIG HERO_TILE_OFFSET_JUMP_RIGHT = 195;
	CONFIG HERO_TILE_OFFSET_CHARGE_UP = 148;
	CONFIG HERO_TILE_OFFSET_CHARGE_DOWN = 145;
	CONFIG HERO_TILE_OFFSET_CHARGE_LEFT = 142;
	CONFIG HERO_TILE_OFFSET_CHARGE_RIGHT = 142;
	CONFIG HERO_TILE_OFFSET_HOLD_1HAND = 6;
	CONFIG HERO_TILE_OFFSET_HOLD_2HAND = 5;
	CONFIG HERO_TILE_OFFSET_CAST = -24;
	CONFIG HERO_TILE_OFFSET_FLOAT_UP = 80;
	CONFIG HERO_TILE_OFFSET_FLOAT_DOWN = 83;
	CONFIG HERO_TILE_OFFSET_FLOAT_LEFT = 86;
	CONFIG HERO_TILE_OFFSET_FLOAT_RIGHT = 89;
	CONFIG HERO_TILE_OFFSET_SWIM_UP = 80;
	CONFIG HERO_TILE_OFFSET_SWIM_DOWN = 83;
	CONFIG HERO_TILE_OFFSET_SWIM_LEFT = 86;
	CONFIG HERO_TILE_OFFSET_SWIM_RIGHT = 89;
	CONFIG HERO_TILE_OFFSET_DIVE_UP = 94;
	CONFIG HERO_TILE_OFFSET_DIVE_DOWN = 94;
	CONFIG HERO_TILE_OFFSET_DIVE_LEFT = 94;
	CONFIG HERO_TILE_OFFSET_DIVE_RIGHT = 94;
	CONFIG HERO_TILE_OFFSET_HOLD_1HANDWATER = 92;
	CONFIG HERO_TILE_OFFSET_HOLD_2HANDWATER = 93;

	//Hero tile flip constants. Set to 1 for horizontal flip. It appears the only flips you can make in the Hero Sprite editor are horizontal flips.
	CONFIG HERO_TILE_FLIP_WALK_UP = 0;
	CONFIG HERO_TILE_FLIP_WALK_DOWN = 0;
	CONFIG HERO_TILE_FLIP_WALK_LEFT = 1;
	CONFIG HERO_TILE_FLIP_WALK_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_SLASH_UP = 0;
	CONFIG HERO_TILE_FLIP_SLASH_DOWN = 0;
	CONFIG HERO_TILE_FLIP_SLASH_LEFT = 0;
	CONFIG HERO_TILE_FLIP_SLASH_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_STAB_UP = 0;
	CONFIG HERO_TILE_FLIP_STAB_DOWN = 0;
	CONFIG HERO_TILE_FLIP_STAB_LEFT = 1;
	CONFIG HERO_TILE_FLIP_STAB_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_POUND_UP = 0;
	CONFIG HERO_TILE_FLIP_POUND_DOWN = 0;
	CONFIG HERO_TILE_FLIP_POUND_LEFT = 1;
	CONFIG HERO_TILE_FLIP_POUND_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_JUMP_UP = 0;
	CONFIG HERO_TILE_FLIP_JUMP_DOWN = 0;
	CONFIG HERO_TILE_FLIP_JUMP_LEFT = 1;
	CONFIG HERO_TILE_FLIP_JUMP_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_CHARGE_UP = 0;
	CONFIG HERO_TILE_FLIP_CHARGE_DOWN = 0;
	CONFIG HERO_TILE_FLIP_CHARGE_LEFT = 1;
	CONFIG HERO_TILE_FLIP_CHARGE_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_HOLD_1HAND = 0;
	CONFIG HERO_TILE_FLIP_HOLD_2HAND = 0;
	CONFIG HERO_TILE_FLIP_CAST = 0;
	CONFIG HERO_TILE_FLIP_FLOAT_UP = 0;
	CONFIG HERO_TILE_FLIP_FLOAT_DOWN = 0;
	CONFIG HERO_TILE_FLIP_FLOAT_LEFT = 1;
	CONFIG HERO_TILE_FLIP_FLOAT_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_SWIM_UP = 0;
	CONFIG HERO_TILE_FLIP_SWIM_DOWN = 0;
	CONFIG HERO_TILE_FLIP_SWIM_LEFT = 1;
	CONFIG HERO_TILE_FLIP_SWIM_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_DIVE_UP = 0;
	CONFIG HERO_TILE_FLIP_DIVE_DOWN = 0;
	CONFIG HERO_TILE_FLIP_DIVE_LEFT = 0;
	CONFIG HERO_TILE_FLIP_DIVE_RIGHT = 0;
	CONFIG HERO_TILE_FLIP_HOLD_1HANDWATER = 0;
	CONFIG HERO_TILE_FLIP_HOLD_2HANDWATER = 0;

	//Hero tile size constants. This is overriden by HERO_TILE_SIZE if it is set to 0 or more.
	CONFIG HERO_TILE_SIZE_WALK_UP = 0;
	CONFIG HERO_TILE_SIZE_WALK_DOWN = 0;
	CONFIG HERO_TILE_SIZE_WALK_LEFT = 0;
	CONFIG HERO_TILE_SIZE_WALK_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_SLASH_UP = 0;
	CONFIG HERO_TILE_SIZE_SLASH_DOWN = 0;
	CONFIG HERO_TILE_SIZE_SLASH_LEFT = 0;
	CONFIG HERO_TILE_SIZE_SLASH_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_STAB_UP = 0;
	CONFIG HERO_TILE_SIZE_STAB_DOWN = 0;
	CONFIG HERO_TILE_SIZE_STAB_LEFT = 0;
	CONFIG HERO_TILE_SIZE_STAB_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_POUND_UP = 0;
	CONFIG HERO_TILE_SIZE_POUND_DOWN = 0;
	CONFIG HERO_TILE_SIZE_POUND_LEFT = 0;
	CONFIG HERO_TILE_SIZE_POUND_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_JUMP_UP = 0;
	CONFIG HERO_TILE_SIZE_JUMP_DOWN = 0;
	CONFIG HERO_TILE_SIZE_JUMP_LEFT = 0;
	CONFIG HERO_TILE_SIZE_JUMP_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_CHARGE_UP = 0;
	CONFIG HERO_TILE_SIZE_CHARGE_DOWN = 0;
	CONFIG HERO_TILE_SIZE_CHARGE_LEFT = 0;
	CONFIG HERO_TILE_SIZE_CHARGE_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_HOLD_1HAND = 0;
	CONFIG HERO_TILE_SIZE_HOLD_2HAND = 0;
	CONFIG HERO_TILE_SIZE_CAST = 0;
	CONFIG HERO_TILE_SIZE_FLOAT_UP = 0;
	CONFIG HERO_TILE_SIZE_FLOAT_DOWN = 0;
	CONFIG HERO_TILE_SIZE_FLOAT_LEFT = 0;
	CONFIG HERO_TILE_SIZE_FLOAT_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_SWIM_UP = 0;
	CONFIG HERO_TILE_SIZE_SWIM_DOWN = 0;
	CONFIG HERO_TILE_SIZE_SWIM_LEFT = 0;
	CONFIG HERO_TILE_SIZE_SWIM_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_DIVE_UP = 0;
	CONFIG HERO_TILE_SIZE_DIVE_DOWN = 0;
	CONFIG HERO_TILE_SIZE_DIVE_LEFT = 0;
	CONFIG HERO_TILE_SIZE_DIVE_RIGHT = 0;
	CONFIG HERO_TILE_SIZE_HOLD_1HANDWATER = 0;
	CONFIG HERO_TILE_SIZE_HOLD_2HANDWATER = 0;

	//Handles the Hero animation routines
	void AnimateHero()
	{
		
	}

	//Forcibly unsets Hero's script animations
	void ForceUnset()
	{
		
	}

	//THIS NEEDS TESTING!!! After I am done with the brief Fire Rod demo thing
	void __GhostWeapon_LTM_Set()
	{
		//A bunch of registers set up for taking the highest LTM of each item class
		//First 256 indicies: The current Level associated with the class.
		//Second 256 indicies: The LTM associated with the class
		
		//Set up the LTMs
		enum LTM_IND
		{
			LTM_ITEMID,
			LTM_MOD,
			LTM_ICLASS,
			LTM_LEVEL,
			NUM_LTM_INDX
		};
		DEFINE NUM_LTMS = 128;
		DEFINE START_LTMS = 1;
		DEFINE SIZE_LTM_ARR = START_LTMS + (NUM_LTM_INDX*NUM_LTMS);
		int LTM_Register[SIZE_LTM_ARR];
		LTM_ITEMS[0] = 0; //Refresh the actual LTM index
		//Set the LTM modifiers within the register array.
		for(int reg = START_LTMS; reg+3 < SIZE_LTM_ARR; reg += 4)
		{
			if(Hero->Item[LTM_ITEMS[reg+LTM_ITEMID]])
			{
				if(LTM_ITEMS[reg+LTM_LEVEL] >= LTM_Register[LTM_ITEMS[reg+LTM_ICLASS]])
				{
					LTM_Register[LTM_ITEMS[reg+LTM_ICLASS]] = LTM_ITEMS[reg+LTM_LEVEL]; //Writes to level half
					LTM_Register[256+LTM_ITEMS[reg+LTM_ICLASS]] = LTM_ITEMS[reg+LTM_MOD]; //Writes to LTM half
				}
			}
		}
		//Add the LTM modifiers to the actual LTM index
		for(int reg = 256; reg < 256+SETTING_MAXITEMCLASS; ++reg)
		{
			LTM_ITEMS[0] += LTM_Register[reg+LTM_ITEMID];
		}
		if((LTM_ITEMS[0]+HERO_ORIGINALTILE) > MAX_TILES || (LTM_ITEMS[0]+HERO_ORIGINALTILE) < 0) //Error: Script LTM references invalid number
		{
			ERROR("__GhostWeapon_LTM_Set", "Combination of Hero Tile and Hero Tile Modifier (%d) is invalid tile.", LTM_ITEMS[0]+HERO_ORIGINALTILE);
			LTM_ITEMS[0] = 0;
		}
	}
}